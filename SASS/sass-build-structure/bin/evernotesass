#!/usr/bin/env node

var mkdirp    = require('mkdirp'),
  fs          = require('fs-extra'),
  path        = require('path'),
  pkg         = require('../package.json'),
  version     = pkg.version,
  dir         = path.dirname();

mkdir(dir + '/sass', function(){
  mkdir(dir + '/sass/base');
  mkdir(dir + '/sass/modules');
  mkdir(dir + '/sass/layout');
  mkdir(dir + '/sass/views');

  // create files
  write(dir + '/sass/base/_fonts.scss', '');
  write(dir + '/sass/layout/_grid.scss', '');
});

// copy the mixins directory and create a new mixins directory
fs.copy(path.join(__dirname, '../base/mixins'), dir + '/sass/base/mixins', function(err) {
  if (err) {
    return console.log(err);
  }
});

// create page specific
fs.readFile(path.join(__dirname, '../Page.scss'), 'utf8', function (err,data) {
  if (err) {
    return console.log(err);
  }
  var newFile = data.replace('@import "views/blue";', '').replace('@import "modules/header";', '').replace('@import "modules/footer";', '');
  write(dir + '/sass/page.scss', newFile);
});

// create mixins
fs.readFile(path.join(__dirname, '../base/_mixins.scss'), 'utf8', function (err,data) {
  if (err) {
    return console.log(err);
  }
  write(dir + '/sass/base/_mixins.scss', data);
});

// create extends
fs.readFile(path.join(__dirname, '../base/_extends.scss'), 'utf8', function (err,data) {
  if (err) {
    return console.log(err);
  }
  write(dir + '/sass/base/_extends.scss', data);
});

// create reset
fs.readFile(path.join(__dirname, '../base/_reset.scss'), 'utf8', function (err,data) {
  if (err) {
    return console.log(err);
  }
  write(dir + '/sass/base/_reset.scss', data);
});

// create variables
fs.readFile(path.join(__dirname, '../base/_variables.scss'), 'utf8', function (err,data) {
  if (err) {
    return console.log(err);
  }
  write(dir + '/sass/base/_variables.scss', data);
});

function write(path, str, mode) {
  fs.writeFileSync(path, str, { mode: mode || 0666 });
  console.log('   \x1b[36mcreate\x1b[0m : ' + path);
}


function mkdir(path, fn) {
  mkdirp(path, 0755, function(err){
    if (err) throw err;
    console.log('   \033[36mcreate\033[0m : ' + path);
    fn && fn();
  });
}
console.log('Evernote Sass ' + version);